{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","services/pixabayApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","params","key","image_type","orientation","fetchImages","a","query","page","pageSize","get","data","hits","toast","error","propTypes","PropTypes","string","isRequired","number","Searchbar","onSubmit","useState","setQuery","className","s","SearchForm","event","preventDefault","trim","warning","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","ImageGalleryItem","webformatURL","largeImageURL","tags","onSetImgData","onOpenModal","src","alt","ImageGalleryItem__image","onClick","ImageGallery","images","length","map","id","Button","onClickHandler","App","loaderContainer","color","height","width","timeout","Component","modalRoot","document","querySelector","Modal","onCloseModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","setImages","isLoading","setIsLoading","setPage","setError","showModal","setShowModal","setLargeImageURL","imgTags","setImgTags","options","pixabayApi","prevImages","scrollToBottom","fetchApi","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prevShowModal","shouldRenderLoadMoreBtn","newQuery","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e2695ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__33uMq\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__27Gma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2BN9O\",\"Modal\":\"Modal_Modal__3neEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1hzzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__21jFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__2fJOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1Op4y\",\"SearchForm\":\"Searchbar_SearchForm__1OXTb\",\"SearchForm__button\":\"Searchbar_SearchForm__button__2_B7S\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__1FVcZ\",\"SearchForm__input\":\"Searchbar_SearchForm__input__wDbem\"};","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '18773042-c85a376c8239f0d185771db9c';\nconst BASE_URL = 'https://pixabay.com/api/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n};\n\nconst fetchImages = async ({ query = '', page = 1, pageSize = 15 }) => {\n  try {\n    const { data } = await axios.get(\n      `?q=${query}&page=${page}&per_page=${pageSize}`,\n    );\n    return data.hits;\n  } catch (error) {\n    toast.error('Failed to connect to server');\n    return [];\n  }\n};\n\nfetchImages.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default fetchImages;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.warning('Enter query name');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchForm__button}>\n          <span className={s.SearchForm__buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm__input}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  tags = '',\n  onSetImgData,\n  onOpenModal,\n}) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.ImageGalleryItem__image}\n        onClick={() => {\n          onSetImgData({ largeImageURL, tags });\n          onOpenModal();\n        }}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onSetImgData: PropTypes.func.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ images, onSetImgData, onOpenModal }) => {\n  if (images.length === 0) return null;\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          onSetImgData={onSetImgData}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n  onSetImgData: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClickHandler }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClickHandler}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={s.loaderContainer}>\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onCloseModal, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      onCloseModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = event => {\n//     if (event.code === 'Escape') {\n//       this.props.onCloseModal();\n//     }\n//   };\n\n//   handleBackdropClick = ({ target, currentTarget }) => {\n//     if (target === currentTarget) {\n//       this.props.onCloseModal();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\n//         <div className={s.Modal}>{this.props.children}</div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\n// Modal.propTypes = {\n//   children: PropTypes.node,\n//   onCloseModal: PropTypes.func.isRequired,\n// };\n\n// export default Modal;\n","import { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\n\nimport pixabayApi from './services/pixabayApi';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [query, setQuery] = useState('new year');\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [pageSize] = useState(15);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [imgTags, setImgTags] = useState(null);\n\n  useEffect(() => {\n    async function fetchApi() {\n      try {\n        const options = { page, query, pageSize };\n        const images = await pixabayApi(options);\n\n        setImages(prevImages => [...prevImages, ...images]);\n\n        if (images.length < 1) {\n          toast.error('Your request was not found');\n          setError(true);\n          return;\n        }\n\n        if (page !== 1) {\n          scrollToBottom();\n        }\n      } catch (error) {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchApi();\n  }, [query, page, pageSize]);\n\n  const handleFormSubmit = newQuery => {\n    if (query === newQuery) {\n      return;\n    }\n\n    setQuery(newQuery);\n    setPage(1);\n    setImages([]);\n    setError(null);\n  };\n\n  const handleLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  const setImgData = ({ largeImageURL, tags }) => {\n    setLargeImageURL(largeImageURL);\n    setImgTags(tags);\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        images={images}\n        onOpenModal={toggleModal}\n        onSetImgData={setImgData}\n      />\n      {shouldRenderLoadMoreBtn && <Button onClickHandler={handleLoadMore} />}\n      {isLoading && <Loader />}\n      {showModal && (\n        <Modal onCloseModal={toggleModal}>\n          <img src={largeImageURL} alt={imgTags} />\n        </Modal>\n      )}\n      {error && <p className=\"text-error\">404</p>}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}